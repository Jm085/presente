const motivos = [
  "Voc√™ √© minha fonte de felicidade.",
  "Seu sorriso ilumina meu dia.",
  "Eu adoro a forma como voc√™ me faz sentir.",
  "A cada dia, voc√™ me surpreende de uma maneira nova.",
  "Voc√™ √© o melhor abra√ßo do mundo.",
  "Sua voz √© minha melodia favorita.",
  "Eu amo sua risada, ela √© contagiante.",
  "Voc√™ sempre sabe como me animar.",
  "A maneira como voc√™ me olha me faz sentir especial.",
  "Voc√™ sempre est√° ao meu lado, n√£o importa a situa√ß√£o.",
  "A forma como voc√™ cuida de mim √© incompar√°vel.",
  "Eu amo a sua energia positiva.",
  "Estar com voc√™ faz tudo valer a pena.",
  "Eu confio em voc√™ completamente.",
  "Sua gentileza me encanta a cada dia.",
  "Adoro compartilhar momentos com voc√™.",
  "Voc√™ √© minha melhor companhia.",
  "Eu amo a forma como voc√™ entende minhas necessidades.",
  "Voc√™ sempre me faz querer ser uma pessoa melhor.",
  "Eu sou grato por cada momento ao seu lado.",
  "Com voc√™, tudo fica mais f√°cil.",
  "Adoro como voc√™ cuida dos pequenos detalhes.",
  "Sua presen√ßa √© o meu maior conforto.",
  "Eu aprendo tanto com voc√™ todos os dias.",
  "Voc√™ √© a raz√£o do meu sorriso di√°rio.",
  "Eu te amo mais a cada dia."
];

let index = 0; // Para controlar at√© onde vamos na lista de motivos
const motivosContainer = document.getElementById("motivos-container");
const mostrarMaisBtn = document.getElementById("mostrarMais");
const mostrarMenosBtn = document.getElementById("mostrarMenos");

let ultimoIndex = 0; // Guardando at√© onde mostramos

// Fun√ß√£o para exibir os motivos com efeito de digita√ß√£o
function exibirMotivos() {
  motivosContainer.innerHTML = ""; // Limpa os motivos exibidos
  let i = ultimoIndex;

  function digitarMotivo() {
    if (i >= index) return;

    const motivo = motivos[i];
    const motivoElement = document.createElement("p");
    motivoElement.classList.add("motivo");
    motivosContainer.appendChild(motivoElement);

    let j = 0;

    function digitarLetra() {
      if (j < motivo.length) {
        motivoElement.innerHTML += motivo[j] === " " ? "&nbsp;" : motivo[j];
        j++;
        setTimeout(digitarLetra, 25); // Velocidade de digita√ß√£o
      } else {
        i++;
        setTimeout(digitarMotivo, 100); // Tempo entre os motivos
      }
    }

    digitarLetra();
  }

  digitarMotivo();
  ultimoIndex = index; // Atualiza o √≠ndice de onde parou
}

// Mostrar mais 5 motivos
mostrarMaisBtn.addEventListener("click", function () {
  mostrarMaisBtn.disabled = true;
  mostrarMenosBtn.disabled = true;

  index = index + 5 <= motivos.length ? index + 5 : motivos.length;
  exibirMotivos();

  setTimeout(() => {
    mostrarMaisBtn.disabled = false;
    mostrarMenosBtn.disabled = false;
  }, 2000);

  if (index >= motivos.length) {
    mostrarMaisBtn.style.display = "none"; // Esconde o "Mostrar Mais" se n√£o houver mais motivos
  }

  mostrarMenosBtn.style.display = "inline-block"; // Exibe o bot√£o "Mostrar Menos"
});

// Mostrar menos 5 motivos
mostrarMenosBtn.addEventListener("click", function () {
  // Reseta o √≠ndice para o in√≠cio dos 5 primeiros
  index = index - 5 >= 5 ? index - 5 : 5;
  ultimoIndex = index;

  // Exibe novamente os 5 primeiros motivos (limpa o container e reexibe)
  exibirMotivos();

  // Esconde o bot√£o "Mostrar Menos" se houver 5 ou menos motivos
  if (index <= 5) {
    mostrarMenosBtn.style.display = "none";
  }

  mostrarMaisBtn.style.display = "inline-block"; // Exibe o bot√£o "Mostrar Mais"
});

// Inicializa√ß√£o: Sem nenhum motivo vis√≠vel
mostrarMaisBtn.style.display = "inline-block";
mostrarMenosBtn.style.display = "none"; // Come√ßa invis√≠vel

// Cora√ß√µes caindo
function gerarCoracoes() {
  const totalCora√ß√µes = 10;
  for (let i = 0; i < totalCora√ß√µes; i++) {
    const cora√ß√£o = document.createElement("div");
    cora√ß√£o.classList.add("heart");
    cora√ß√£o.innerHTML = "üíñ";
    document.body.appendChild(cora√ß√£o);

    const posX = Math.random() * window.innerWidth;
    cora√ß√£o.style.left = `${posX}px`;
    cora√ß√£o.style.animationDuration = `${Math.random() * 2 + 3}s`;

    setTimeout(() => {
      cora√ß√£o.remove();
    }, 5000);
  }
}

setInterval(gerarCoracoes, 2000);
